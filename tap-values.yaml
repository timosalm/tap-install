#@ load("@ytt:data", "data")
---
profile: full
ceip_policy_disclosed: true # Installation fails if this is set to 'false'

excluded_packages:
- policy.apps.tanzu.vmware.com

shared:
  ingress_domain: #@ data.values.ingress.domain

accelerator:
  domain: #@ data.values.ingress.domain
  ingress:
    include: true
  server:
    service_type: ClusterIP
  tls:
    namespace: #@ data.values.ingress.contour_tls_namespace
    secret_name: #@ data.values.ingress.contour_tls_secret

appliveview:
  tls:
    namespace: #@ data.values.ingress.contour_tls_namespace
    secretName: #@ data.values.ingress.contour_tls_secret

buildservice:
  kp_default_repository: #@ "{}/{}/build-service".format(data.values.container_registry.hostname,data.values.container_registry.project)
  kp_default_repository_username: #@ data.values.container_registry.username
  kp_default_repository_password: #@ data.values.container_registry.password
  tanzunet_username: #@ data.values.tanzunet.username
  tanzunet_password: #@ data.values.tanzunet.password
  exclude_dependencies: true

supply_chain: #@ data.values.supply_chain if "supply_chain" in data.values else "testing_scanning"

ootb_supply_chain_basic:
  registry:
    server: #@ data.values.container_registry.hostname
    repository: #@ data.values.container_registry.project_workload
  gitops:
    ssh_secret: ""

ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.container_registry.hostname
    repository: #@ data.values.container_registry.project_workload
  gitops:
    ssh_secret: ""

learningcenter:
  ingressDomain: #@ "learning-center.{}".format(data.values.ingress.domain)
  ingressSecret:
    secretName: #@ "learning-center-{}".format(data.values.ingress.contour_tls_secret)

tap_gui:
  ingressEnabled: true
  ingressDomain: #@ data.values.ingress.domain
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer
  tls:
    secretName: #@ data.values.ingress.contour_tls_secret
    namespace: #@ data.values.ingress.contour_tls_namespace
  app_config:
    backend:
      baseUrl: #@ "https://tap-gui.{}".format(data.values.ingress.domain)
      cors:
        origin: #@ "https://tap-gui.{}".format(data.values.ingress.domain)
    app:
      baseUrl: #@ "https://tap-gui.{}".format(data.values.ingress.domain)

metadata_store:
  app_service_type: ClusterIP # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don't support LoadBalancer

grype:
  namespace: #@ data.values.developer_namespace
  targetImagePullSecret: registry-credentials

contour:
  envoy:
    service:
      annotations:      
        external-dns.alpha.kubernetes.io/hostname: #@ "*.{}".format(data.values.ingress.domain)
      type: LoadBalancer

cnrs:
  domain_name: #@ "cnr.{}".format(data.values.ingress.domain)
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
  default_tls_secret: #@ "{}/cnr-{}".format(data.values.ingress.contour_tls_namespace,data.values.ingress.contour_tls_secret)

package_overlays:
- name: cnrs
  secrets:
  - name: cnrs-network-config-overlay
  - name: cnrs-certmanager-config-overlay
